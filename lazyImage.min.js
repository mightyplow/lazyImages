(function(t,n){var e=t["MutationObserver"],r=t["IntersectionObserver"],i=t["Set"];if(!(e&&r&&i)){return}var u="data-";var o={threshold:0};var c={childList:true,subtree:true};function s(t){return t&&Array.prototype.slice.call(t)||[]}function a(t,n,e){t.setAttribute(e,t.getAttribute(n));t.removeAttribute(n)}function f(t,n){t.forEach(n)}var d={a:function(){return u+this.b},c:function(t){f(this.d(t),function(t){a(t,this.b,this.a())}.bind(this))},e:function(t){f(this.d(t),function(t){a(t,this.a(),this.b)}.bind(this))},f:function(t){return this.d(t).every(function(t){return!!t.getAttribute(this.b)}.bind(this))}};var b=n.assign({},d,{b:"src",d:function(t){return[t]}});var v=n.assign({},d,{b:"srcset",d:function(t){return s(t.querySelectorAll("source"))}});function h(t){if(t instanceof HTMLImageElement){return b}else if(t instanceof HTMLPictureElement){return v}return null}function l(t){f(t,function(t){var n=t.target,e=h(n);e.e(n);g.unobserve(n)})}function m(t,n){return t.reduce(function(t,e){var r=s(e.addedNodes||[]);f(r,function(e){if(e.matches){if(e.matches(n)){t.add(e)}f(e.querySelectorAll(n),t.add.bind(t))}});return t},new i)}var g=new r(l,o);var A=new e(function(t){console.time("mutations");var n=m(t,"img, picture");f(n,function(t){var n=h(t);if(n&&n.f(t)){n.c(t);g.observe(t)}});console.timeEnd("mutations")});A.observe(document,c)})(window,Object);
